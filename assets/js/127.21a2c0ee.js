(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{399:function(e,t,r){"use strict";r.r(t);var c=r(10),n=Object(c.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"surfaceeccentricity"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#surfaceeccentricity"}},[e._v("#")]),e._v(" SurfaceEccentricity")]),e._v(" "),t("h2",{attrs:{id:"classes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#classes"}},[e._v("#")]),e._v(" Classes")]),e._v(" "),t("dl",[t("dt",[t("a",{attrs:{href:"#SurfaceEccentricity"}},[e._v("SurfaceEccentricity")])]),e._v(" "),t("dd")]),e._v(" "),t("h2",{attrs:{id:"functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),t("dl",[t("dt",[t("a",{attrs:{href:"#createSurfaceEccentricity"}},[e._v("createSurfaceEccentricity(no, surfaces_list, comment, params)")]),e._v(" ⇒")]),e._v(" "),t("dd",[t("p",[e._v("Creates base surface eccentricity")])]),e._v(" "),t("dt",[t("a",{attrs:{href:"#getAlignment"}},[e._v("getAlignment(alignment)")]),e._v(" ⇒")]),e._v(" "),t("dd",[t("p",[e._v("Convert string representation of alignment (private)")])])]),e._v(" "),t("p",[t("a",{attrs:{name:"SurfaceEccentricity"}})]),e._v(" "),t("h2",{attrs:{id:"surfaceeccentricity-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#surfaceeccentricity-2"}},[e._v("#")]),e._v(" SurfaceEccentricity")]),e._v(" "),t("p",[t("strong",[e._v("Kind")]),e._v(": global class")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#SurfaceEccentricity"}},[e._v("SurfaceEccentricity")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#new_SurfaceEccentricity_new"}},[e._v("new SurfaceEccentricity(no, surfaces_list, comment, params)")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#SurfaceEccentricity+OffsetAndThicknessAssignment"}},[e._v(".OffsetAndThicknessAssignment(no, surfaces_list, offset, thickness_alignment, comment, params)")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#SurfaceEccentricity+TransverseOffset"}},[e._v(".TransverseOffset(reference_type, reference_no, offset_alignment)")])])])])]),e._v(" "),t("p",[t("a",{attrs:{name:"new_SurfaceEccentricity_new"}})]),e._v(" "),t("h3",{attrs:{id:"new-surfaceeccentricity-no-surfaces-list-comment-params"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new-surfaceeccentricity-no-surfaces-list-comment-params"}},[e._v("#")]),e._v(" new SurfaceEccentricity(no, surfaces_list, comment, params)")]),e._v(" "),t("p",[e._v("Creates surface eccentricity")]),e._v(" "),t("p",[t("strong",[e._v("Returns")]),e._v(": Created surface eccentricity")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Param")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("no")]),e._v(" "),t("td",[t("code",[e._v("Number")])]),e._v(" "),t("td",[e._v("Index of surface eccentricity, can be undefined")])]),e._v(" "),t("tr",[t("td",[e._v("surfaces_list")]),e._v(" "),t("td",[t("code",[e._v("Array")])]),e._v(" "),t("td",[e._v("List of surfaces indexes")])]),e._v(" "),t("tr",[t("td",[e._v("comment")]),e._v(" "),t("td",[t("code",[e._v("String")])]),e._v(" "),t("td",[e._v("Comment, can be undefined")])]),e._v(" "),t("tr",[t("td",[e._v("params")]),e._v(" "),t("td",[t("code",[e._v("Object")])]),e._v(" "),t("td",[e._v("Surface eccentricity's parameters, can be undefined")])])])]),e._v(" "),t("p",[t("a",{attrs:{name:"SurfaceEccentricity+OffsetAndThicknessAssignment"}})]),e._v(" "),t("h3",{attrs:{id:"surfaceeccentricity-offsetandthicknessassignment-no-surfaces-list-offset-thickness-alignment-comment-params"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#surfaceeccentricity-offsetandthicknessassignment-no-surfaces-list-offset-thickness-alignment-comment-params"}},[e._v("#")]),e._v(" surfaceEccentricity.OffsetAndThicknessAssignment(no, surfaces_list, offset, thickness_alignment, comment, params)")]),e._v(" "),t("p",[e._v("Sets offset or/and thickness alignment")]),e._v(" "),t("p",[t("strong",[e._v("Kind")]),e._v(": instance method of "),t("a",{attrs:{href:"#SurfaceEccentricity"}},[t("code",[e._v("SurfaceEccentricity")])])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Param")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("no")]),e._v(" "),t("td",[t("code",[e._v("Number")])]),e._v(" "),t("td",[e._v("Index of surface eccentricity, can be undefined")])]),e._v(" "),t("tr",[t("td",[e._v("surfaces_list")]),e._v(" "),t("td",[t("code",[e._v("Array")])]),e._v(" "),t("td",[e._v("List of surfaces indexes")])]),e._v(" "),t("tr",[t("td",[e._v("offset")]),e._v(" "),t("td",[t("code",[e._v("Number")])]),e._v(" "),t("td",[e._v("Absolute ordinate (value has tu be set with this way: for example 20 mm), can be undefined")])]),e._v(" "),t("tr",[t("td",[e._v("thickness_alignment")]),e._v(" "),t("td",[t("code",[e._v("String")])]),e._v(" "),t("td",[e._v("Thickness assignment (THICKNESS_ALIGNMENT_TOP, THICKNESS_ALIGNMENT_MIDDLE, THICKNESS_ALIGNMENT_BOTTOM), can be undefined (middle as default)")])]),e._v(" "),t("tr",[t("td",[e._v("comment")]),e._v(" "),t("td",[t("code",[e._v("String")])]),e._v(" "),t("td",[e._v("Comment, can be undefined")])]),e._v(" "),t("tr",[t("td",[e._v("params")]),e._v(" "),t("td",[t("code",[e._v("Object")])]),e._v(" "),t("td",[e._v("Surface eccentricity's parameters, can be undefined")])])])]),e._v(" "),t("p",[t("a",{attrs:{name:"SurfaceEccentricity+TransverseOffset"}})]),e._v(" "),t("h3",{attrs:{id:"surfaceeccentricity-transverseoffset-reference-type-reference-no-offset-alignment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#surfaceeccentricity-transverseoffset-reference-type-reference-no-offset-alignment"}},[e._v("#")]),e._v(" surfaceEccentricity.TransverseOffset(reference_type, reference_no, offset_alignment)")]),e._v(" "),t("p",[e._v("Sets transverse offset")]),e._v(" "),t("p",[t("strong",[e._v("Kind")]),e._v(": instance method of "),t("a",{attrs:{href:"#SurfaceEccentricity"}},[t("code",[e._v("SurfaceEccentricity")])])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Param")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("reference_type")]),e._v(" "),t("td",[t("code",[e._v("String")])]),e._v(" "),t("td",[e._v("Reference object type (REFERENCE_TYPE_MEMBER, REFERENCE_TYPE_SURFACE)")])]),e._v(" "),t("tr",[t("td",[e._v("reference_no")]),e._v(" "),t("td",[t("code",[e._v("Number")])]),e._v(" "),t("td",[e._v("Member or surface Number")])]),e._v(" "),t("tr",[t("td",[e._v("offset_alignment")]),e._v(" "),t("td",[t("code",[e._v("String")])]),e._v(" "),t("td",[e._v("Axial offset (TRANSVERSE_OFFSET_TOP, TRANSVERSE_OFFSET_MIDDLE, TRANSVERSE_OFFSET_BOTTOM), can be undefined (middle as default)")])])])]),e._v(" "),t("p",[t("a",{attrs:{name:"createSurfaceEccentricity"}})]),e._v(" "),t("h2",{attrs:{id:"createsurfaceeccentricity-no-surfaces-list-comment-params-⇒"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#createsurfaceeccentricity-no-surfaces-list-comment-params-⇒"}},[e._v("#")]),e._v(" createSurfaceEccentricity(no, surfaces_list, comment, params) ⇒")]),e._v(" "),t("p",[e._v("Creates base surface eccentricity")]),e._v(" "),t("p",[t("strong",[e._v("Kind")]),e._v(": global function"),t("br"),e._v(" "),t("strong",[e._v("Returns")]),e._v(": Surface eccentricity")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Param")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("no")]),e._v(" "),t("td",[t("code",[e._v("Number")])]),e._v(" "),t("td",[e._v("Index of surface eccentricity, can be undefined")])]),e._v(" "),t("tr",[t("td",[e._v("surfaces_list")]),e._v(" "),t("td",[t("code",[e._v("Array")])]),e._v(" "),t("td",[e._v("List of surfaces indexes")])]),e._v(" "),t("tr",[t("td",[e._v("comment")]),e._v(" "),t("td",[t("code",[e._v("String")])]),e._v(" "),t("td",[e._v("Comment, can be undefined")])]),e._v(" "),t("tr",[t("td",[e._v("params")]),e._v(" "),t("td",[t("code",[e._v("Object")])]),e._v(" "),t("td",[e._v("Surface eccentricity's parameters, can be undefined")])])])]),e._v(" "),t("p",[t("a",{attrs:{name:"getAlignment"}})]),e._v(" "),t("h2",{attrs:{id:"getalignment-alignment-⇒"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getalignment-alignment-⇒"}},[e._v("#")]),e._v(" getAlignment(alignment) ⇒")]),e._v(" "),t("p",[e._v("Convert string representation of alignment (private)")]),e._v(" "),t("p",[t("strong",[e._v("Kind")]),e._v(": global function"),t("br"),e._v(" "),t("strong",[e._v("Returns")]),e._v(": Surface eccentricity alignment")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Param")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("alignment")]),e._v(" "),t("td",[t("code",[e._v("String")])]),e._v(" "),t("td",[e._v("Surface eccentricity alignment")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);