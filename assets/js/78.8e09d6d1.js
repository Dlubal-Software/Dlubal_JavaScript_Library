(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{350:function(t,e,a){"use strict";a.r(e);var o=a(10),d=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"baseload"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#baseload"}},[t._v("#")]),t._v(" BaseLoad")]),t._v(" "),e("h2",{attrs:{id:"functions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),e("dl",[e("dt",[e("a",{attrs:{href:"#createBaseLoad"}},[t._v("createBaseLoad(load_type, no, load_case, index_list, comment, params)")]),t._v(" ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("dd",[e("p",[t._v("Creates load based on its type")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#createSimplyValueLoad"}},[t._v("createSimplyValueLoad(load_type, no, load_case, nodes, force, moment, mass, load_direction, comment, params)")]),t._v(" ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("dd",[e("p",[t._v("Creates load with one only value (force, mass and so on)")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#showLoadAssert"}},[t._v("showLoadAssert(load_type, load_distribution)")])]),t._v(" "),e("dd",[e("p",[t._v("Shows assert (private)")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#setLoadValues"}},[t._v("setLoadValues(arguments)")])]),t._v(" "),e("dd",[e("p",[t._v("Set load parameters")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#setAxis"}},[t._v("setAxis(load, value)")]),t._v(" ⇒ "),e("code",[t._v("Boolean")])]),t._v(" "),e("dd",[e("p",[t._v("Sets axis for rotary motion load type")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#setAxisAndOrientation"}},[t._v("setAxisAndOrientation(load, value)")]),t._v(" ⇒ "),e("code",[t._v("Boolean")])]),t._v(" "),e("dd",[e("p",[t._v("Sets axis and orientation for rotary motion load type")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#setLineLoadDistribution"}},[t._v("setLineLoadDistribution(load, load_type, load_distribution, load_values)")]),t._v(" ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("dd",[e("p",[t._v("Function assigns parameters to line / line set load depend of load type and load distribution (private)")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#setMemberLoadDistribution"}},[t._v("setMemberLoadDistribution(load, load_type, load_distribution, load_values)")]),t._v(" ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("dd",[e("p",[t._v("Function assigns parameters to member / member set load depend of load type and load distribution (private)")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#setSurfaceLoadDistribution"}},[t._v("setSurfaceLoadDistribution(load, load_type, load_distribution, load_values)")]),t._v(" ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("dd",[e("p",[t._v("Function assigns parameters to surface / surface set load depend of load type and load distribution (private)")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#setSolidLoadDistribution"}},[t._v("setSolidLoadDistribution(load, load_type, load_distribution, load_values)")]),t._v(" ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("dd",[e("p",[t._v("Function assigns parameters to solid / solid set load depend of load type and load distribution (private)")])]),t._v(" "),e("dt",[e("a",{attrs:{href:"#setCommonFreeLoadsValues"}},[t._v("setCommonFreeLoadsValues(load, load_projection, load_direction, load_acting_region_from, load_acting_region_to)")]),t._v(" ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("dd",[e("p",[t._v("Updates common parameters for free loads")])])]),t._v(" "),e("p",[e("a",{attrs:{name:"createBaseLoad"}})]),t._v(" "),e("h2",{attrs:{id:"createbaseload-load-type-no-load-case-index-list-comment-params-⇒-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#createbaseload-load-type-no-load-case-index-list-comment-params-⇒-object"}},[t._v("#")]),t._v(" createBaseLoad(load_type, no, load_case, index_list, comment, params) ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("p",[t._v("Creates load based on its type")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function"),e("br"),t._v(" "),e("strong",[t._v("Returns")]),t._v(": "),e("code",[t._v("Object")]),t._v(" - Created load")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("load_type")]),t._v(" "),e("td",[e("code",[t._v("Number")])]),t._v(" "),e("td",[t._v("Load type")])]),t._v(" "),e("tr",[e("td",[t._v("no")]),t._v(" "),e("td",[e("code",[t._v("Number")])]),t._v(" "),e("td",[t._v("Index of load, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("load_case")]),t._v(" "),e("td",[e("code",[t._v("Object")])]),t._v(" "),e("td",[t._v("Load case")])]),t._v(" "),e("tr",[e("td",[t._v("index_list")]),t._v(" "),e("td",[e("code",[t._v("Array")])]),t._v(" "),e("td",[t._v("List of assigned objects (indexes), can be empty")])]),t._v(" "),e("tr",[e("td",[t._v("comment")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Comment, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("params")]),t._v(" "),e("td",[e("code",[t._v("Object")])]),t._v(" "),e("td",[t._v("Load parameters, can be undefined")])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"createSimplyValueLoad"}})]),t._v(" "),e("h2",{attrs:{id:"createsimplyvalueload-load-type-no-load-case-nodes-force-moment-mass-load-direction-comment-params-⇒-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#createsimplyvalueload-load-type-no-load-case-nodes-force-moment-mass-load-direction-comment-params-⇒-object"}},[t._v("#")]),t._v(" createSimplyValueLoad(load_type, no, load_case, nodes, force, moment, mass, load_direction, comment, params) ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("p",[t._v("Creates load with one only value (force, mass and so on)")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function"),e("br"),t._v(" "),e("strong",[t._v("Returns")]),t._v(": "),e("code",[t._v("Object")]),t._v(" - Created load")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("load_type")]),t._v(" "),e("td",[e("code",[t._v("Number")])]),t._v(" "),e("td",[t._v("Load type")])]),t._v(" "),e("tr",[e("td",[t._v("no")]),t._v(" "),e("td",[e("code",[t._v("Number")])]),t._v(" "),e("td",[t._v("Index of nodal load, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("load_case")]),t._v(" "),e("td",[e("code",[t._v("Object")])]),t._v(" "),e("td",[t._v("Load case")])]),t._v(" "),e("tr",[e("td",[t._v("nodes")]),t._v(" "),e("td",[e("code",[t._v("Array")])]),t._v(" "),e("td",[t._v("List of node indexes, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("force")]),t._v(" "),e("td",[e("code",[t._v("Number")])]),t._v(" "),e("td",[t._v("Load force value, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("moment")]),t._v(" "),e("td",[e("code",[t._v("Number")])]),t._v(" "),e("td",[t._v("Load moment value, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("mass")]),t._v(" "),e("td",[e("code",[t._v("Number")])]),t._v(" "),e("td",[t._v("Load mass value, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("load_direction")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load direction, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("comment")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Comment, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("params")]),t._v(" "),e("td",[e("code",[t._v("Object")])]),t._v(" "),e("td",[t._v("Load parameters, can be undefined")])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"showLoadAssert"}})]),t._v(" "),e("h2",{attrs:{id:"showloadassert-load-type-load-distribution"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#showloadassert-load-type-load-distribution"}},[t._v("#")]),t._v(" showLoadAssert(load_type, load_distribution)")]),t._v(" "),e("p",[t._v("Shows assert (private)")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("load_type")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load type")])]),t._v(" "),e("tr",[e("td",[t._v("load_distribution")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load distribution, can be undefined")])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"setLoadValues"}})]),t._v(" "),e("h2",{attrs:{id:"setloadvalues-arguments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setloadvalues-arguments"}},[t._v("#")]),t._v(" setLoadValues(arguments)")]),t._v(" "),e("p",[t._v("Set load parameters")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("arguments")]),t._v(" "),e("td",[e("code",[t._v("Array")])]),t._v(" "),e("td",[t._v("Arguments: arg[0] - load, arg[1] - load parameters, arg[2] - load parameters to be set")])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"setAxis"}})]),t._v(" "),e("h2",{attrs:{id:"setaxis-load-value-⇒-boolean"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setaxis-load-value-⇒-boolean"}},[t._v("#")]),t._v(" setAxis(load, value) ⇒ "),e("code",[t._v("Boolean")])]),t._v(" "),e("p",[t._v("Sets axis for rotary motion load type")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function"),e("br"),t._v(" "),e("strong",[t._v("Returns")]),t._v(": "),e("code",[t._v("Boolean")]),t._v(" - True if axis and orientation was successfully set")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("load")]),t._v(" "),e("td",[e("code",[t._v("Object")])]),t._v(" "),e("td",[t._v("Load")])]),t._v(" "),e("tr",[e("td",[t._v("value")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Parallel axis (X, Y, Z)")])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"setAxisAndOrientation"}})]),t._v(" "),e("h2",{attrs:{id:"setaxisandorientation-load-value-⇒-boolean"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setaxisandorientation-load-value-⇒-boolean"}},[t._v("#")]),t._v(" setAxisAndOrientation(load, value) ⇒ "),e("code",[t._v("Boolean")])]),t._v(" "),e("p",[t._v("Sets axis and orientation for rotary motion load type")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function"),e("br"),t._v(" "),e("strong",[t._v("Returns")]),t._v(": "),e("code",[t._v("Boolean")]),t._v(" - True if axis and orientation was successfully set")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("load")]),t._v(" "),e("td",[e("code",[t._v("Object")])]),t._v(" "),e("td",[t._v("Load")])]),t._v(" "),e("tr",[e("td",[t._v("value")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Parallel axis (+X, -X, ...)")])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"setLineLoadDistribution"}})]),t._v(" "),e("h2",{attrs:{id:"setlineloaddistribution-load-load-type-load-distribution-load-values-⇒-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setlineloaddistribution-load-load-type-load-distribution-load-values-⇒-object"}},[t._v("#")]),t._v(" setLineLoadDistribution(load, load_type, load_distribution, load_values) ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("p",[t._v("Function assigns parameters to line / line set load depend of load type and load distribution (private)")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function"),e("br"),t._v(" "),e("strong",[t._v("Returns")]),t._v(": "),e("code",[t._v("Object")]),t._v(" - Returns modified load")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("load")]),t._v(" "),e("td",[e("code",[t._v("Object")])]),t._v(" "),e("td",[t._v("Load")])]),t._v(" "),e("tr",[e("td",[t._v("load_type")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load type")])]),t._v(" "),e("tr",[e("td",[t._v("load_distribution")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load distribution")])]),t._v(" "),e("tr",[e("td",[t._v("load_values")]),t._v(" "),e("td",[e("code",[t._v("Array")])]),t._v(" "),e("td",[t._v('Load parameters depend on load type and load distribution \t\t\t\t\t\t\t\t\t\t- (load type / load distribution: [valid values]) \t\t\t\t\t\t\t\t\t\t- "Force" / "Uniform": [p] \t\t\t\t\t\t\t\t\t\t- "Force" / "Uniform - Total": [P] \t\t\t\t\t\t\t\t\t\t- "Force" / "Concentrated - 1": [P, A, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Concentrated - n x": [P, n, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Concentrated - 2 x 2": [P, A, B, C, is_a_relative, is_b_relative, is_c_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Concentrated - 2 x": [P1, A, P2, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Concentrated - Varying": [P1, x1, P2, x2 ... Pn, xn] \t\t\t\t\t\t\t\t\t\t- "Force" / "Trapezoidal": [p1, B, p2, A, is_b_relative, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Tapered": [p1, p2, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Parabolic": [p1, p2, p3] \t\t\t\t\t\t\t\t\t\t- "Force" / "Varying": [p1, x1, p2, x2 ... pn, xn] \t\t\t\t\t\t\t\t\t\t- "Force" / "Varying in Z": [p1, z1, p2, z2 ... pn, zn] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Uniform" (load type / load distribution): [m] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Concentrated - 1": [M, A, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Concentrated - n x": [M, n, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Concentrated - 2 x 2": [M, A, B, C, is_a_relative, is_b_relative, is_c_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Concentrated - 2 x": [M1, A, M2, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Concentrated - Varying": [M1, x1, M2, x2 ... Mn, xn] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Trapezoidal": [m1, B, m2, A, is_b_relative, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Tapered": [m1, m2, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Parabolic": [m1, m2, m3] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Varying": [m1, x1, m2, x2 ... mn, xn] \t\t\t\t\t\t\t\t\t\t- "Mass" / "Uniform": M')])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"setMemberLoadDistribution"}})]),t._v(" "),e("h2",{attrs:{id:"setmemberloaddistribution-load-load-type-load-distribution-load-values-⇒-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setmemberloaddistribution-load-load-type-load-distribution-load-values-⇒-object"}},[t._v("#")]),t._v(" setMemberLoadDistribution(load, load_type, load_distribution, load_values) ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("p",[t._v("Function assigns parameters to member / member set load depend of load type and load distribution (private)")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function"),e("br"),t._v(" "),e("strong",[t._v("Returns")]),t._v(": "),e("code",[t._v("Object")]),t._v(" - Returns modified load")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("load")]),t._v(" "),e("td",[e("code",[t._v("Object")])]),t._v(" "),e("td",[t._v("Load")])]),t._v(" "),e("tr",[e("td",[t._v("load_type")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load type")])]),t._v(" "),e("tr",[e("td",[t._v("load_distribution")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load distribution, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("load_values")]),t._v(" "),e("td",[e("code",[t._v("Array")])]),t._v(" "),e("td",[t._v('Load parameters depend on load type and load distribution \t\t\t\t\t\t\t\t\t\t- (load type / load distribution: [valid values]) \t\t\t\t\t\t\t\t\t\t- "Force" / "Uniform": [p] \t\t\t\t\t\t\t\t\t\t- "Force" / "Uniform - Total": [P] \t\t\t\t\t\t\t\t\t\t- "Force" / "Concentrated - 1": [P, A, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Concentrated - n x": [P, n, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Concentrated - 2 x 2": [P, A, B, C, is_a_relative, is_b_relative, is_c_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Concentrated - 2 x": [P1, A, P2, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Concentrated - Varying": [P1, x1, P2, x2 ... Pn, xn] \t\t\t\t\t\t\t\t\t\t- "Force" / "Trapezoidal": [p1, B, p2, A, is_b_relative, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Tapered": [p1, p2, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Force" / "Parabolic": [p1, p2, p3] \t\t\t\t\t\t\t\t\t\t- "Force" / "Varying": [p1, x1, p2, x2, ... pn, xn] \t\t\t\t\t\t\t\t\t\t- "Force" / "Varying in Z": [p1, z1, p2, z2 ... pn, zn] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Uniform" (load type / load distribution): [m] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Concentrated - 1": [M, A, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Concentrated - n x": [M, n, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Concentrated - 2 x 2": [M, A, B, C, is_a_relative, is_b_relative, is_c_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Concentrated - 2 x": [M1, A, M2, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Concentrated - Varying": [M1, x1, M2, x2 ... Mn, xn] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Trapezoidal": [m1, B, m2, A, is_b_relative, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Tapered": [m1, m2, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Parabolic": [m1, m2, m3] \t\t\t\t\t\t\t\t\t\t- "Moment" / "Varying": [m1, x1, m2, x2, ... mn, xn] \t\t\t\t\t\t\t\t\t\t- "Mass" / "Uniform": M \t\t\t\t\t\t\t\t\t\t- "Temperature" / "Uniform": [Tt, Tb] \t\t\t\t\t\t\t\t\t\t- "Temperature" / "Trapezoidal": [Tt1, B, Tb1, Tt2, Tb2, A, is_b_relative, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Temperature" / "Tapered": [Tt1, Tb1, Tt2, Tb2, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Temperature" / "Parabolic": [Tt1, Tb1, Tt2, Tb2, Tt3, Tb3] \t\t\t\t\t\t\t\t\t\t- "Temperature" / "Varying": [Tt1, Tb1, x1, Tt2, Tb2, x2 ... Ttn, Tbn, xn] \t\t\t\t\t\t\t\t\t\t- "Temperature Change" / "Uniform": [Tc, ΔT] \t\t\t\t\t\t\t\t\t\t- "Temperature Change" / "Trapezoidal": [Tc1, B, ΔT1, Tc2, ΔT2, A, is_b_relative, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Temperature Change" / "Tapered": [Tc1, ΔT1, ΔT2, ΔT2, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Temperature Change" / "Parabolic": [Tt1, ΔT1, Tt2, ΔT2, Tt3, ΔT3] \t\t\t\t\t\t\t\t\t\t- "Temperature Change" / "Varying": [Tc1, ΔT1, x1, Tc2, ΔT2, x2 ... Tcn, ΔTn, xn] \t\t\t\t\t\t\t\t\t\t- "Axial Strain" / "Uniform": [ε] \t\t\t\t\t\t\t\t\t\t- "Axial Strain" / "Trapezoidal": [ε1, B, ε2, A, is_b_relative, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Axial Strain" / "Tapered": [ε1, ε2, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Axial Strain" / "Parabolic": [ε1, ε2, ε3] \t\t\t\t\t\t\t\t\t\t- "Axial Strain" / Varying": [ε1, x1, ε2, x2, ... εn, xn] \t\t\t\t\t\t\t\t\t\t- "Axial Displacement" / "Uniform": Δl \t\t\t\t\t\t\t\t\t\t- "Precamber" / "Uniform": [κ] \t\t\t\t\t\t\t\t\t\t- "Precamber" / "Trapezoidal": [κ1, B, κ2, A, is_b_relative, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Precamber" / "Tapered": [κ1, A, κ2, B, is_a_relative, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Precamber" / "Parabolic": [κ1, κ2, κ3] \t\t\t\t\t\t\t\t\t\t- "Precamber" / "Varying": [κ1, x1, κ2, x2, ... κn, xn] \t\t\t\t\t\t\t\t\t\t- "Initial Prestress" / "Uniform": V \t\t\t\t\t\t\t\t\t\t- "Displacement" / "Uniform": [δ] \t\t\t\t\t\t\t\t\t\t- "Displacement" / "Concentrated - 1": [Δ, A, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Displacement" / "Concentrated - n x": [Δ, n, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Displacement" / "Concentrated - 2 x 2": [Δ, A, B, C, is_a_relative, is_b_relative, is_c_relative] \t\t\t\t\t\t\t\t\t\t- "Displacement" / "Concentrated - 2 x": [Δ1, Δ2, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Displacement" / "Concentrated - Varying": [Δ1, x1, Δ2, x2 ... Δn, xn] \t\t\t\t\t\t\t\t\t\t- "Displacement" / "Trapezoidal": [δ1, B, δ2, A, is_b_relative, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Displacement" / "Tapered": [δ1, δ2, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Displacement" / "Parabolic": [δ1, δ2, δ3] \t\t\t\t\t\t\t\t\t\t- "Displacement" / "Varying": [δ1, x1, δ2, x2, ... δn, xn] \t\t\t\t\t\t\t\t\t\t- "Rotation" / "Uniform": [φ] \t\t\t\t\t\t\t\t\t\t- "Rotation" / "Concentrated - 1": [φ, A, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Rotation" / "Concentrated - n x": [φ, n, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Rotation" / "Concentrated - 2 x 2": [φ, A, B, C, is_a_relative, is_b_relative, is_c_relative] \t\t\t\t\t\t\t\t\t\t- "Rotation" / "Concentrated - 2 x": [φ1, A, φ2, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Rotation" / "Concentrated - Varying": [φ1, x1, φ2, x2 ... φn, xn] \t\t\t\t\t\t\t\t\t\t- "Rotation" / "Trapezoidal": [φ1, B, φ2, A, is_b_relative, is_a_relative] \t\t\t\t\t\t\t\t\t\t- "Rotation" / "Tapered": [φ1, φ2, A, B, is_a_relative, is_b_relative] \t\t\t\t\t\t\t\t\t\t- "Rotation" / "Parabolic": [φ1, φ2, φ3] \t\t\t\t\t\t\t\t\t\t- "Rotation" / "Varying": [φ1, x1, φ2, x2, ... φn, xn] \t\t\t\t\t\t\t\t\t\t- "Pipe Content - Full" / "Uniform": γ \t\t\t\t\t\t\t\t\t\t- "Pipe Content - Partial" / "Uniform": [γ, d] \t\t\t\t\t\t\t\t\t\t- "Pipe Internal Pressure" / "Uniform": p \t\t\t\t\t\t\t\t\t\t- "Rotary Motion": [axis_definition, ω, α, [Node1, Node2]')])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"setSurfaceLoadDistribution"}})]),t._v(" "),e("h2",{attrs:{id:"setsurfaceloaddistribution-load-load-type-load-distribution-load-values-⇒-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setsurfaceloaddistribution-load-load-type-load-distribution-load-values-⇒-object"}},[t._v("#")]),t._v(" setSurfaceLoadDistribution(load, load_type, load_distribution, load_values) ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("p",[t._v("Function assigns parameters to surface / surface set load depend of load type and load distribution (private)")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function"),e("br"),t._v(" "),e("strong",[t._v("Returns")]),t._v(": "),e("code",[t._v("Object")]),t._v(" - Returns modified load")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("load")]),t._v(" "),e("td",[e("code",[t._v("Object")])]),t._v(" "),e("td",[t._v("Load")])]),t._v(" "),e("tr",[e("td",[t._v("load_type")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load type")])]),t._v(" "),e("tr",[e("td",[t._v("load_distribution")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load distribution, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("load_values")]),t._v(" "),e("td",[e("code",[t._v("Array")])]),t._v(" "),e("td",[t._v('Load parameters depend on load type and load distribution \t\t\t\t\t\t\t\t\t\t- (load type / load distribution: [valid values]) \t\t\t\t\t\t\t\t\t\t- "Force" / "Uniform": [p] \t\t\t\t\t\t\t\t\t\t- "Force" / "Linear": [Node1, Node2, Node3, p1, p2, p3] \t\t\t\t\t\t\t\t\t\t- "Force: / "Linear in X": [Node1, Node2, p1, p2] \t\t\t\t\t\t\t\t\t\t- "Force" / "Linear in Y": [Node1, Node2, p1, p2] \t\t\t\t\t\t\t\t\t\t- "Force" / "Linear in Z": [Node1, Node2, p1, p2] \t\t\t\t\t\t\t\t\t\t- "Force" / "Radial": [axis_definition, p1, p2, Node1, Node2, [Node1, Node2]')])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"setSolidLoadDistribution"}})]),t._v(" "),e("h2",{attrs:{id:"setsolidloaddistribution-load-load-type-load-distribution-load-values-⇒-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setsolidloaddistribution-load-load-type-load-distribution-load-values-⇒-object"}},[t._v("#")]),t._v(" setSolidLoadDistribution(load, load_type, load_distribution, load_values) ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("p",[t._v("Function assigns parameters to solid / solid set load depend of load type and load distribution (private)")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function"),e("br"),t._v(" "),e("strong",[t._v("Returns")]),t._v(": "),e("code",[t._v("Object")]),t._v(" - Returns modified load")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("load")]),t._v(" "),e("td",[e("code",[t._v("Object")])]),t._v(" "),e("td",[t._v("Load")])]),t._v(" "),e("tr",[e("td",[t._v("load_type")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load type")])]),t._v(" "),e("tr",[e("td",[t._v("load_distribution")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load distribution, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("load_values")]),t._v(" "),e("td",[e("code",[t._v("Array")])]),t._v(" "),e("td",[t._v('Load parameters depend on load type and load distribution \t\t\t\t\t\t\t\t\t\t- (load type / load distribution: [valid values]) \t\t\t\t\t\t\t\t\t\t- "Force" / "Uniform": [p] \t\t\t\t\t\t\t\t\t\t- "Temperature" / "Uniform": [T] \t\t\t\t\t\t\t\t\t\t- "Temperature" / "Linear in X": [Node1, Node2, T1, T2] \t\t\t\t\t\t\t\t\t\t- "Temperature" / "Linear in Y": [Node1, Node2, T1, T2] \t\t\t\t\t\t\t\t\t\t- "Temperature" / "Linear in Z": [Node1, Node2, T1, T2] \t\t\t\t\t\t\t\t\t\t- "Strain" / "Uniform": [εx, εy, εz] \t\t\t\t\t\t\t\t\t\t- "Strain" / "Linear in X": [Node1, Node2, ε1x, ε1y, ε1z, ε2x, ε2y, ε2z] \t\t\t\t\t\t\t\t\t\t- "Strain" / "Linear in Y": [Node1, Node2, ε1x, ε1y, ε1z, ε2x, ε2y, ε2z] \t\t\t\t\t\t\t\t\t\t- "Strain" / "Linear in Z": [Node1, Node2, ε1x, ε1y, ε1z, ε2x, ε2y, ε2z] \t\t\t\t\t\t\t\t\t\t- "Buoyancy" / "Uniform": [p] \t\t\t\t\t\t\t\t\t\t- "Rotary Motion": [axis_definition, p1, p2, Node1, Node2, [Node1, Node2]')])])])]),t._v(" "),e("p",[e("a",{attrs:{name:"setCommonFreeLoadsValues"}})]),t._v(" "),e("h2",{attrs:{id:"setcommonfreeloadsvalues-load-load-projection-load-direction-load-acting-region-from-load-acting-region-to-⇒-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setcommonfreeloadsvalues-load-load-projection-load-direction-load-acting-region-from-load-acting-region-to-⇒-object"}},[t._v("#")]),t._v(" setCommonFreeLoadsValues(load, load_projection, load_direction, load_acting_region_from, load_acting_region_to) ⇒ "),e("code",[t._v("Object")])]),t._v(" "),e("p",[t._v("Updates common parameters for free loads")]),t._v(" "),e("p",[e("strong",[t._v("Kind")]),t._v(": global function"),e("br"),t._v(" "),e("strong",[t._v("Returns")]),t._v(": "),e("code",[t._v("Object")]),t._v(" - Updated free load")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Param")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("load")]),t._v(" "),e("td",[e("code",[t._v("Object")])]),t._v(" "),e("td",[t._v("Load")])]),t._v(" "),e("tr",[e("td",[t._v("load_projection")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load projection, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("load_direction")]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Load direction, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("load_acting_region_from")]),t._v(" "),e("td",[e("code",[t._v("Number")])]),t._v(" "),e("td",[t._v("Start of load acting region, can be undefined")])]),t._v(" "),e("tr",[e("td",[t._v("load_acting_region_to")]),t._v(" "),e("td",[e("code",[t._v("Number")])]),t._v(" "),e("td",[t._v("End of load acting region, can be undefined")])])])])])}),[],!1,null,null,null);e.default=d.exports}}]);